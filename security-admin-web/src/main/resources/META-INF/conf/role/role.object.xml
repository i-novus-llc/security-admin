<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-3.0"
        name="Роли">

    <operations>
        <operation id="create"
                   success-text="Роль сохранена">
            <invocation>
                <java method="create" class="net.n2oapp.security.admin.api.service.RoleService">
                    <spring/>
                    <arguments>
                        <argument name="role" class="net.n2oapp.security.admin.api.model.RoleForm"/>
                    </arguments>
                </java>
            </invocation>
            <in-parameters>
                <param id="name" mapping="[0].name" domain="string" required="true"/>
                <param id="code" mapping="[0].code" domain="string" required="true"/>
                <param id="description" mapping="[0].description" domain="string"/>
                <param id="permissions*.id" mapping="[0].permissions" domain="string[]"/>
                <param id="system.id" mapping="[0].systemCode" required="${sec.admin.system-enabled}" domain="string"/>
            </in-parameters>
            <out-parameters>
                <param id="id" mapping="id"/>
            </out-parameters>
        </operation>

        <operation id="update"
                   success-text="Роль сохранена">
            <invocation>
                <java method="update" class="net.n2oapp.security.admin.api.service.RoleService">
                    <spring/>
                    <arguments>
                        <argument name="role" class="net.n2oapp.security.admin.api.model.RoleForm"/>
                    </arguments>
                </java>
            </invocation>
            <in-parameters>
                <param id="id" mapping="[0].id" domain="integer" required="true"/>
                <param id="name" mapping="[0].name" domain="string" required="true"/>
                <param id="code" mapping="[0].code" domain="string" required="true"/>
                <param id="description" mapping="[0].description" domain="string"/>
                <param id="permissions*.id" mapping="[0].permissions" domain="string[]"/>
                <param id="system.id" mapping="[0].systemCode" required="${sec.admin.system-enabled}" domain="string"
                       mapping-condition="${sec.admin.system-enabled}"/>
            </in-parameters>
            <out-parameters>
                <param id="id" mapping="id"/>
            </out-parameters>
        </operation>

        <operation id="delete"
                   confirm-text="Вы уверены, что хотите удалить роль?"
                   success-text="Роль удалена">
            <invocation>
                <java method="delete" class="net.n2oapp.security.admin.api.service.RoleService">
                    <spring/>
                    <arguments>
                        <argument name="id" class="java.lang.Integer" type="class"/>
                    </arguments>
                </java>
            </invocation>
            <in-parameters>
                <param id="id" mapping="[0]" domain="integer" required="true"/>
            </in-parameters>
            <validations white-list="usedRole"/>
        </operation>
    </operations>

    <validations>
        <constraint id="usedRole"
                    severity="danger"
                    message="Удаление невозможно, так как имеются пользователи с такой ролью!"
                    result="#this == 0">
            <invocation>
                <java method="countUsersWithRole" class="net.n2oapp.security.admin.api.service.RoleService">
                    <spring/>
                    <arguments>
                        <argument name="id" class="java.lang.Integer" type="class"/>
                    </arguments>
                </java>
            </invocation>
            <in-parameters>
                <param id="id" mapping="[0]" domain="integer"/>
            </in-parameters>
        </constraint>
    </validations>
</object>
