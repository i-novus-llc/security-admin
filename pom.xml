<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.n2oapp.framework.security</groupId>
    <artifactId>security-admin</artifactId>
    <packaging>pom</packaging>
    <version>8.0.2-SNAPSHOT</version>

    <parent>
        <groupId>net.n2oapp.platform</groupId>
        <artifactId>n2o-boot-platform-parent</artifactId>
        <version>6.1.3</version>
        <relativePath />
    </parent>

    <properties>
        <java.version>17</java.version>
        <n2o.version>7.28.2</n2o.version>
        <rdm-sync.version>1.45.3</rdm-sync.version>
        <rdm-api.version>4.24.1</rdm-api.version>
        <nimbusds.version>7.9</nimbusds.version>
        <liquibase-sessionlock.version>1.6.6</liquibase-sessionlock.version>
        <liquibase.version>4.24.0</liquibase.version>
        <config.server.enable>false</config.server.enable>
        <jacoco.skip>true</jacoco.skip>
        <docker.image.tag>${project.version}-${maven.build.timestamp}</docker.image.tag>
    </properties>

    <scm>
        <connection>scm:git:https://git.i-novus.ru/framework/security-admin.git</connection>
        <url>https://git.i-novus.ru/framework/security-admin</url>
        <developerConnection>scm:git:https://git.i-novus.ru/framework/security-admin.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>security-admin-api</module>
        <module>security-admin-rest-api</module>
        <module>security-admin-rest-client</module>
        <module>security-auth</module>
        <module>security-auth-common</module>
        <module>security-admin-impl</module>
        <module>security-admin-web</module>
        <module>security-admin-rest-server</module>
        <module>security-admin-sso-keycloak</module>
        <module>security-admin-db</module>
        <module>security-admin-backend</module>
        <module>security-admin-frontend</module>
        <module>doc</module>
        <module>coverage</module>
        <module>security-autoconfigure</module>
        <module>security-starters</module>
    </modules>

    <profiles>
        <profile>
            <id>production</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <config.server.enable>true</config.server.enable>
            </properties>
        </profile>

        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                            <stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ci-build</id>
            <activation>
                <property>
                    <name>ci.commit.sha</name>
                </property>
            </activation>
            <properties>
                <docker.env.name><!--do not delete, property overrides at ci-build--></docker.env.name>
                <docker.image.tag>${project.version}${ci.commit.sha}${docker.env.name}</docker.image.tag>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-docker-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/.docker-compose</directory>
                                    <targetPath>${project.basedir}/.docker-compose/target</targetPath>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>*.yml</include>
                                    </includes>
                                    <excludes>
                                        <exclude>**/target/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-k8s-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/.k8s</directory>
                                    <targetPath>${project.basedir}/.k8s/target</targetPath>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>**/target/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-k8s-local-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/.k8s-local/helm</directory>
                                    <targetPath>${project.basedir}/.k8s-local/target</targetPath>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>**/target/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
